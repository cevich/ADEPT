---

- assert:
    that:
        # This should be passed in as a role-variable (a list)
        - 'inventory_hostnames is defined'
        - 'inventory_hostnames not in [None, "", {}]'
        # hostvars is a magic ansible-created variable
        - 'inventory_hostnames | difference(hostvars) == []'
        # assumes hostvarsfile is already in desired state (on disk)

# Check specific inventory_hostname items w/in inventory_hostnames
- assert:
    that:
        - 'hostvars[item].group_names | length > 0'
        - 'hostvars[item].hostvarsfile is defined'
        - 'lookup("file", hostvars[item].hostvarsfile) not in [None, "", {}]'
  with_items: '{{ inventory_hostnames }}'

# This avoids needing to use a dynamic-inventory script, but only
# works for ansible 2.1+
- name: Runtime inventory updated from host_vars/hostvarsfile
  add_host:
    name: "{{ item }}"
    # Don't change group membership, merge it in as-is.
    groups: "{{ hostvars[item].group_names | join(',') }}"
  args: '{{ lookup("file", hostvars[item].hostvarsfile) | from_yaml }}'
  # Don't try and read host_vars file on kommandir, they're not there!
  delegate_to: exekutir
  with_items: '{{ inventory_hostnames }}'

# Otherwise, some magic hostvars might not be defined or have current values
- name: The setup module re/establishes all magic ansible hostvars
  setup:
  delegate_to: '{{ item }}'
  with_items: '{{ inventory_hostnames }}'

- name: hostvars for inventory_hostnames are displayed
  debug:
    var: "hostvars[inventory_hostname]"
  when: adept_debug
  with_items: '{{ inventory_hostnames }}'
