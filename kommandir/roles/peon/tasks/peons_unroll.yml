---

# Depends:
#   - outer_item
#   - adept_job
# Registers:
#   - _peon
#   - inner_item

- block:
    - name: peon's defaults are located
      set_fact:
        _defaults: '{{ outer_item.defaults | default("defaults") }}'

    - name: peon's defaults are referenced by shorter name
      set_fact:
        _pd: '{{ peon_defaults[_defaults] |
                 default(peon_defaults["defaults"]) }}'

    - name: peon's defaults are mapped from master defaults
      set_fact:
        # Avoid need to hard-code all possible key's
        _pd: '{{ _pd | combine(
                      {item.key: _pd[item.key] | default(item.value)}) }}'
      with_dict: '{{ peon_defaults.defaults }}'

    - name: peon's buffer is initialized
      set_fact:
        _peon: '{{ outer_item }}'

    - name: peon's buffer populated by default attributes when omitted
      set_fact:
        # Avoid need to hard-code all possible key's
        _peon: "{{ _peon | combine(
                    {item.key: _peon[item.key] |
                               default(item.value)})
                }}"
      with_dict: '{{ _pd }}'

    - name: peon's groups list is buffered
      set_fact:
        # peon group list (ell not number 1)
        _pgl: '{{ _peon.groups | default([]) }}'
      when: _peon.extra_groups is defined and
            _peon.extra_groups != []

    - name: peon's extra_groups are joined into buffer
      set_fact:
        _pgl: '{{ _peon.extra_groups | union(_pgl) }}'
      when: _pgl is defined

    - name: peon's updated groups list combined back into peon buffer
      set_fact:
        _peon: '{{ _peon | combine({"groups": _pgl,
                                    "extra_groups": [] }) }}'
      when: _pgl is defined

- name: peons are defined
  include: roles/peon/tasks/peons_guuid.yml
