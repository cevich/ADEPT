---

- assert:
    that:
        - 'empty is defined'
        - 'wait_for_timeout | default() not in empty'
        - "inventory_hostname != 'kommandir'"
        - "hostvars.kommandir.workspace is defined"
        - "ansible_host is defined"

- name: Key variables are displayed
  debug:
    var: "{{ item }}"
  when: adept_debug
  with_items: ["ansible_host","ansible_port","ansible_user","wait_for_timeout",'reboot_context']

- name: Role was included by rebooted role, bypassing dependencies
  include: "{{ playbook_dir }}/roles/failed_peon_result/tasks/main.yml"
  vars:
    this_role: "rebooted.peon_up.{{ reboot_context }}"
  when: reboot_context | default() not in empty

- name: peon's ssh port is open from perspective of kommandir
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ ansible_port | default(22) }}"
    # Fail quickly == retry sooner
    connect_timeout: 1
    # Minumum is two-DNS failures + one second
    timeout: "{{ wait_for_timeout }}"
    state: "started"
  delegate_to: kommandir
  register: result
  until: result | success
  retries: '{{ wait_for_timeout }}'
  delay: 1

# It's undesireable to have the host removed from inventory while it's still booting up.
- name: The ansible raw module runs successfully on host
  command: '{{ adept_path }}/venv-cmd.sh ansible -i inventory {{ inventory_hostname }} -m raw -a "{{ up_cmd }}"'
  register: result
  delegate_to: kommandir
  until: result | success
  retries: '{{ wait_for_timeout }}'
  delay: 1

- name: The result of the command is displayed
  debug:
    var: "result"
  when: adept_debug
