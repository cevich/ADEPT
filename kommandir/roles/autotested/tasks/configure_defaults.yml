---

- assert:
    that:
        - 'autotest_docker_path is defined'

- name: Key variables are displayed
  debug:
    var: "{{ item }}"
  when: adept_debug
  with_items: ["config_custom_defaults","docker_autotest"]

- name: Config_custom_defaults string is set
  set_fact:
    config_custom_defaults: "{{ autotest_docker_path }}/config_custom/defaults.ini"

- name: Custom defaults file status is known
  stat:
  args:
    path: "{{ config_custom_defaults }}"
  register: config_custom_defaults_file

- name: Defaults needed flag is set true
  set_fact:
    result: true
  when: not config_custom_defaults_file.stat.exists or
        test_image_fqin is defined

- name: Defaults needed flag is set false
  set_fact:
    result: false
  when: result is not defined

- name: Copy defaults
  command: cp config_defaults/defaults.ini config_custom/defaults.ini
  args:
    chdir: "{{ autotest_docker_path }}"
  when: result

- name: Don't check Autotest version
  ini_file:
  args:
    dest: "{{ config_custom_defaults }}"
    option: autotest_version
    section: DEFAULTS
    value: "@!NOVERSIONCHECK!@"
  when: result

- name: Defaults test image options values are configured
  ini_file:
  args:
    dest: "{{ config_custom_defaults }}"
    option: "{{ item.key }}"
    section: DEFAULTS
    value: "{{ item.value }}"
  when: result and test_image_fqin is defined
  with_dict:
    docker_registry_host: "{{ docker_autotest.test_image.host | default('') }}"
    docker_registry_user: "{{ docker_autotest.test_image.user | default('') }}"
    docker_repo_name: "{{ docker_autotest.test_image.name | default('') }}"
    docker_repo_tag: "{{ docker_autotest.test_image.tag | default('') }}"

- name: Buffer docker images output
  shell: >
    docker images --filter=dangling=false --format="{{ '{{' }}.Repository{{ '}}' }}:{{ '{{' }}.Tag{{ '}}' }}"
  # fixup vim syntax-highlighting problem
  #"
  register: result
  when: result

- name: Default image preserve CSV value is formatted
  set_fact:
    _preserve_fqins: '{{ result.stdout_lines }}'
  when: result and result.stdout_lines

- name: image preserve CSV value is ammended by docker_autotest.preserve_fqins
  set_fact:
    _preserve_fqins: '{{ _preserve_fqins | default([]) + docker_autotest.preserve_fqins  }}'
  when: result and docker_autotest.preserve_fqins is defined and
        docker_autotest.preserve_fqins not in [None,'',[],{}]

- name: Buffer docker ps output
  shell: >
    docker ps --format="{{ '{{' }}.Names{{ '}}' }}"
  # fixup vim syntax-highlighting problem
  #"
  register: result
  when: result

- name: Default container preserve CSV value is formatted
  set_fact:
    _preserve_cnames: '{{ result.stdout_lines }}'
  when: result and result.stdout_lines

- name: container preserve CSV value is ammended by docker_autotest.preserve_cnames
  set_fact:
    _preserve_cnames: '{{ _preserve_cnames | default([]) + docker_autotest.preserve_cnames }}'
  when: result and docker_autotest.preserve_cnames is defined and
        docker_autotest.preserve_cnames not in [None,'',[],{}]

- name: Defaults image and container preserve options values are configured
  ini_file:
  args:
    dest: "{{ config_custom_defaults }}"
    option: "{{ item.key }}"
    section: DEFAULTS
    value: "{{ item.value }}"
  when: result and item.value not in [None,'',',',[],{}]
  with_dict:
    preserve_fqins: "{{ _preserve_fqins | default([]) | join(',') }}"
    preserve_cnames: "{{ _preserve_cnames | default([]) | join(',') }}"
