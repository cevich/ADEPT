---

# Depends:
#  adept_openstack: dictionary
# Registers:
#   openstack_cleanup

- block:

    - name: All peons are deleted
      os_server:
        cloud: default
        name: '{{ item.uuid }}'
        # Docs say this is required
        image: '{{ adept_openstack.image_map[item.defaults][item.version] }}'
        state: absent
        wait: True
      # There are many reasons why this could fail
      ignore_errors: True
      with_items: "{{ peon_set }}"

    - name: All peons volumes are deleted
      os_volume:
        cloud: default
        display_name: '{{ item.uuid }}'
        state: absent
        wait: False
      when: item.volume is defined and
            item.volume != None and
            item.volume != ''
      # Failure could occur before volume was created, then fail again
      # here, but peon should still be removed.
      ignore_errors: True
      with_items: "{{ peon_set }}"

    # N/B: floating IPs are not removed, they will be recycled as needed

  when: peon_set is defined and peon_set != []

- block:

    - include: roles/openstack/tasks/cache_flush.yml
      vars:
        # Script may have already been removed
        ignore_errors: True

  always:
    - name: openstack dynamic inventory script is removed
      file:
        path: "{{ workspace }}/inventory/{{ adept_job }}"
        state: absent

    - name: openstack peon facts are removed
      file:
        path: "{{ workspace }}/peon_facts.yml"
        state: absent
      when: cleanup_peon_facts

    - name: workspace/clouds.yml file is removed
      file:
        path: "{{ workspace }}/clouds.yml"
        state: absent
      when: cleanup_clouds_yaml

    - name: /etc/openstack/clouds.yml file is removed
      file:
        path: "/etc/openstack/clouds.yml"
        state: absent
      when: cleanup_clouds_yaml

    - name: workspace/openrc.sh file is removed
      file:
        path: "{{ workspace }}/openrc.sh"
        state: absent
      when: cleanup_openrc_sh

    - name: workspace/service_catalog.yml is removed
      file:
        path: "{{ workspace }}/service_catalog.yml"
        state: absent
      when: cleanup_service_catalog
