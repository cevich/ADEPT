---

- assert:
    that:
        - 'empty is defined'
        - 'is_atomic | default() not in empty'
        - '"updated" in group_names'

- name: Key variables are displayed
  debug:
    var: "{{ item }}"
  when: adept_debug
  with_items: ["is_atomic","updated"]

# This simplifies actually performing the update and examining results (below)
- name: Atomic upgrade diff check output is buffered
  command: atomic host upgrade --check-diff
  register: result
  # 0 == Upgrade ready, applicable, & available.
  # 77 == No change
  # 1 == Error or no newer upgrade available
  failed_when: result.rc not in [0,77] and
               not result.stderr | search('older than current revision') and
               not result.stdout | search('No upgrade available.')
  changed_when: False

- debug:
    var: "result"
  when: adept_debug

- name: Set result True when an updated is needed as indicated by atomic diff (above)
  set_fact:
    result: True
  when: result.rc == 0

- name: Set result False when an update is not needed
  set_fact:
    result: False

- block:

    - name: Workaround old atomic command bug, fsetxattr/failure w/ /tmp symlink
      # Don't touch /etc/sysconfig/selinux with ansible selinux module
      command: setenforce 0

    - name: Atomic host is updated to latest tree
      command: atomic host upgrade
      register: result
      # Give oportunity for debugging
      ignore_errors: True
      # Default retries is 3 and timeout is 5
      until: result.rc is defined and result.rc in [0,77]
      # Depending on networking, this could take a while.
      async: '{{ install_timeout }}'
      poll: 5

    - debug:
        var: "result"
      when: adept_debug

    - fail:
      when: result.rc not in [0,77]

    - name: System needs rebooting to activate changes
      set_fact:
        needs_reboot: True

  always:

    - name: Undo Workaround of old atomic command bug
      command: setenforce 1

  when: result == True
