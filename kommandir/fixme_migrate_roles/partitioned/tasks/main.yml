---

# Depends:
#   disk_device: path to device node to operate on
#   parted_cmds: string of commands and options to pass into parted

- block:

    - name: Current partition table is stored
      command: "/usr/sbin/sfdisk --dump {{ disk_device }}"
      register: sfdisk_before
      # Fails if no disk label exists, caught by 'fail' module below
      ignore_errors: true
      changed_when: False

    - name: Missing/corrupt partition table is okay
      assert:
        msg: "The word 'Success' must appear in failed sfdisk --dump output"
        that:
            sfdisk_before.stdout | search('Success') or
            sfdisk_before.stderr | search('Success')
      when: sfdisk_before | failed

    - block:

        - name: parted command is executed
          shell: "/usr/sbin/parted --script {{
                    disk_device }} {{ parted_cmds }}"
          register: parted

      rescue:
        - debug: var=parted

        - name: post-fail partition table is stored
          command: "/usr/sbin/sfdisk --dump {{ disk_device }}"
          register: sfdisk_rescue
          changed_when: False

        - name: Original partition table is recovered
          shell: "/usr/bin/echo {{ sfdisk_before.stdout |
                    quote }} | /usr/sbin/sfdisk {{ disk_device }}"
          when: sfdisk_before.stdout != sfdisk_rescue.stdout

      always:
        - name: Final partition table is stored
          command: "/usr/sbin/sfdisk --dump {{ disk_device }}"
          register: sfdisk_after
          changed_when: False

      when: parted_cmds is defined and parted_cmds != None and parted_cmds != ''

    - name: system needs reboot when partition table changed
      set_fact:
        needs_reboot: True
      when: sfdisk_before.stdout != sfdisk_after.stdout

  when: disk_device is defined and disk_device != None and disk_device != ''
