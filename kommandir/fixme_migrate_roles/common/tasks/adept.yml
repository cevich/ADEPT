---

# Depends:
#   - adept_path: location of adept directory (repo)
#   - workspace: location for lookingup/storing state data
#   - adept_context: Current or different context to pass through
#   - adept_yaml: Adept yaml input file to read
#   - adept_optional: Any extra arguments to pass through
#   - adept_timeout: Optional max timeout in seconds (defaults 1800)
# Registers:
#   - result

# This does not allow realtime observation, but does eventually show all output
- name: adept command is executed in the background, capturing stdout and stderr
  shell: "TERM=dumb {{ adept_path }}/adept.py {{ adept_context }} {{ workspace }} {{ adept_yaml }} {{ adept_optional | default(omit) }} 2>/dev/stdout"
  async: "{{ adept_timeout | default(1800) }}"
  poll: 5
  register: result
  ignore_errors: True

# TODO: Write a raw_debug module
- debug: var=result.stdout_lines

- name: fail if adept command returned non-zero
  fail:
  when: result | failed
