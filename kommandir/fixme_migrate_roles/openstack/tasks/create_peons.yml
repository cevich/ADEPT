---

# Depends:
#   - peon
#   - adept_openstack

- debug:
    msg: "Working on peon: {{ peon.uuid }}"

- name: private security group is used when sec_mode is True
  set_fact:
    _secgrps: '{{ adept_openstack.private_sec_groups }}'
  when: peon.private

- name: public security group is used when sec_mode is False
  set_fact:
    _secgrps: '{{ adept_openstack.public_sec_groups }}'
  when: _secgrp is undefined

- name: metadata is defined
  set_fact:
    metadata:
        hostname: '{{ peon.uuid }}'
        groups: '{{ peon.groups | join(",") }}'

- name: userdata is buffered
  set_fact:
    userdata: '{{ adept_openstack.userdata }}'

- name: ssh_authorized_keys is buffered
  set_fact:
    ssh_authorized_keys: '{{ userdata.ssh_authorized_keys }}'
  when: "{{ 'ssh_authorized_keys' in userdata }}"

- name: current public key file path is defined
  set_fact:
    pubkeyfile: '{{ workspace }}/ssh_private_key.pub'
  when: "{{ 'ssh_authorized_keys' in userdata }}"

- name: public key is buffered
  set_fact:
    pubkey: '{{ lookup("file", pubkeyfile) }}'
  when: "{{ 'ssh_authorized_keys' in userdata }}"

- name: ssh_authorized_keys updated from buffer
  set_fact:
    ssh_authorized_keys: '{{ ssh_authorized_keys | union([pubkey]) }}'
  when: "{{ 'ssh_authorized_keys' in userdata }}"

- name: userdata updated with new ssh_authorized_keys
  set_fact:
    userdata: '{{ userdata | combine({"ssh_authorized_keys":
                                       ssh_authorized_keys}) }}'
  when: "{{ 'ssh_authorized_keys' in userdata }}"

- name: peon-specific cloud-config included into userdata
  set_fact:
    userdata: '{{ userdata | combine(peon.userdata) }}'
  when: peon.userdata is defined and peon.userdata != {}

- name: userdata is defined
  set_fact:
    userdata: |
        {{ "#cloud-config" }}
        {{ userdata | to_nice_yaml }}

- name: facts about peon's image are retrievable
  os_image_facts:
    cloud: default
    image: '{{ adept_openstack.image_map[peon.defaults][peon.version] }}'
    wait: True
  # Helpful error message is next task
  ignore_errors: True
  register: _imgfacts

- fail:
    msg: "Error looking up image from {{ adept_openstack.image_map }}"
  when: _imgfacts | failed

- debug:
    msg: |
      os_server module arguments:
        cloud: default
        flavor: "m1.medium"
        image: '{{ adept_openstack.image_map[peon.defaults][peon.version] }}'
        name: '{{ peon.uuid }}'
        security_groups: '{{ _secgrps }}'
        auto_ip: False
        userdata: "{{ userdata }}"
        meta: "{{ metadata }}"
        timeout: 300
        wait: True

- name: peon from peon_set is provisioned
  os_server:
    cloud: default
    # This must be large enough for the image being used
    flavor: "m1.medium"
    image: '{{ adept_openstack.image_map[peon.defaults][peon.version] }}'
    name: '{{ peon.uuid }}'
    security_groups: '{{ _secgrps }}'
    auto_ip: False
    userdata: "{{ userdata }}"
    meta: "{{ metadata }}"
    timeout: 300
    wait: True
  register: _created

- name: peon has IP addresses
  os_floating_ip:
    network: '{{ adept_openstack.public_network }}'
    cloud: default
    reuse: True
    server: '{{ peon.uuid }}'
    state: present
    wait: True
    timeout: 300
  when: _created.openstack is defined and
        _created.openstack.public_v4 is undefined or
        _created.openstack.public_v4|trim == ""

- block:

    - name: volume created for peon
      os_volume:
        cloud: default
        display_name: '{{ peon.uuid }}'
        size: '{{ peon.volume | int }}'
        state: present
        timeout: 300
        wait: True

    - name: volume attached to peon
      os_server_volume:
        cloud: default
        server: '{{ peon.uuid }}'
        state: present
        volume: '{{ peon.uuid }}'
        wait: True
      # No way to check availability of volume, retry until successful
      register: _vol_att
      ignore_errors: True
      until: _vol_att | succeeded
      retries: 120
      delay: 1

  when: peon.volume is defined and
        peon.volume != None and
        peon.volume != ''
