---

# Depends:
#   kommandir_workspaces
#   kommandir_volumedev
#   kommandir_volumeprt

- name: input commands string to sfdisk and bypass regex is defined
  set_fact:
    # One gig by default, then grown below
    sfdisk_stdin: "{{ kommandir_volumedev }}{{ kommandir_volumeprt }} : size=1024, Id=8e"
    sfdisk_bypass: "{{ kommandir_volumedev }}{{ kommandir_volumeprt }}.*Linux LVM"

- name: Partition table is backedup
  command: sfdisk --dump {{ kommandir_volumedev }}
  register: dump
  changed_when: False

- debug: var=dump.stdout_lines

- name: sfdisk command is executed
  shell: echo {{ sfdisk_stdin | quote }} | sfdisk --no-reread --quiet --unit M {{ kommandir_volumedev }}
  register: sfdisk
  ignore_errors: True
  # Re-partitioning causes problems if already in-use by lvm/kernel
  when: "{{ not (dump.stdout | search(sfdisk_bypass) | bool ) }}"
  changed_when: sfdisk.stdout | search('wrote the new partition table')

- name: Partition table is recovered
  shell: echo {{ dump.stdout | quote }} | sfdisk --no-reread --quiet {{ kommandir_volumedev }}
  when: sfdisk | failed and
        dump.stdout_lines != [] and
        "{{ not (dump.stdout | search('no partition table present') | bool) }}"
  changed_when: sfdisk.stdout | search('wrote the new partition table')

- fail:
    msg: Partitioning failed
  when: sfdisk is defined and
        sfdisk | failed

- name: Partition occupies entire disk
  command: growpart {{ kommandir_volumedev }} {{ kommandir_volumeprt }}
  register: growpart
  # Command fails when partition is not changed
  ignore_errors: True
  changed_when: "{{ growpart.stdout | default('') | search('CHANGED:') }}"

- fail:
    msg: Growing partition failed
  when: growpart | failed and
        "{{ not (growpart.stdout | default('') | search('it cannot be grown') | bool) }}"

- name: kommandir volume-group is created
  lvg:
    pvs: "{{ kommandir_volumedev }}{{ kommandir_volumeprt }}"
    state: present
    vg: kommandir

- name: physical-volume expands to max size
  command: lvm pvresize {{ kommandir_volumedev }}{{ kommandir_volumeprt }}
  register: pvresize
  changed_when: pvresize.stdout | search('1 physical volume(s) resized')

- name: workspaces logical volume is created
  lvol:
    lv: workspaces
    size: 75%VG
    state: present
    vg: kommandir
  register: lvol

- name: workspace filesystem is created
  filesystem:
    dev: /dev/kommandir/workspaces
    fstype: xfs

- name: workspaces mount point is created
  file:
    path: "{{ kommandir_workspaces }}"
    state: directory

- name: workspace filesystem is mounted
  mount:
    fstype: xfs
    name: "{{ kommandir_workspaces }}"
    opts: noatime
    passno: 1 2
    src: /dev/kommandir/workspaces
    state: mounted

# Must be mounted
- name: workspace filesystem is grown
  command: xfs_growfs {{ kommandir_workspaces }}
