---

# Depends:
#   - kommandir_image: Name/UUID/Filename of VM image to use
#   - kommandir_openstack.auth_url
#   - kommandir_openstack.username
#   - kommandir_openstack.password
#   - kommandir_openstack.tenant_name
#   - kommandir_openstack.userdata
#   - kommandir_openstack.legacy_floating_ip_pool
#   - kommandir_openstack.image
# Registers:
#   - kmndrname
#   - kmndrip

# Depends on old / deprecated openstack ansible modules
# and command line clients because the initial VM creation
# environment is not likely under the control of who/whatever is
# running this playbook.

- name: openrc.sh file is rendered from template
  # Older ansible needs it this way
  include: ../../../roles/openstack/tasks/openrcsh.yml
  vars:
    destdir: '{{ workspace }}'
    auth_url: '{{ kommandir_openstack.auth_url }}'
    tenant_name: '{{ kommandir_openstack.tenant_name }}'
    username: '{{ kommandir_openstack.username }}'
    password: '{{ kommandir_openstack.password }}'

- name: ADEPT kommandir VM exists
  os_server:
    state: present
    auth:
      auth_url: '{{ kommandir_openstack.auth_url }}'
      username: '{{ kommandir_openstack.username }}'
      password: '{{ kommandir_openstack.password }}'
      project_name: '{{ kommandir_openstack.tenant_name }}'
    flavor: 3
    image: '{{ kommandir_openstack.image }}'
    name: '{{ kmndrname | quote }}'
    floating_ip_pools: '{{ kommandir_openstack.legacy_floating_ip_pool | list }}'
    timeout: 30
    wait: yes
    user_data: |
      '{{ "#cloud-config" }}'
      '{{ kommandir_openstack.userdata | to_nice_yaml }}'
  register: nc

- name: ADEPT kommandir's public IP list is extracted from variable
  set_fact:
    _kmndrip: '{{ nc.server.interface_ip }}'

- name: the kmndrip variable is set from first item in list
  set_fact:
    kmndrip: '{{ _kmndrip[0] | trim }}'
  # Minimum dotted IP notation length - so this must be a list
  when: '{{ _kmndrip | length < 7 }}'

- name: the kmndrip variable is set from IP address tring
  set_fact:
    kmndrip: '{{ _kmndrip | trim }}'
  # Minimum dotted IP notation length - so this must be a IP address
  when: '{{ _kmndrip | length > 6 }}'

# Saves needing an extra task to empty the file
- name: the KMNDRIP file contains kommandir's ip addresss
  shell: echo "{{ kmndrip }}" > '{{ workspace }}/KMNDRIP'

# Older ansible doesn't have modules for volume manipulation
# use command-line client "the hard way" to ensure state is idempotent

- name: Kommandir's workspace storage volume state is known
  shell: "{{ workspace }}/openrc.sh /usr/bin/cinder show {{ kmndrname | quote }}"
  register: pre_nvc
  ignore_errors: True

- name: Kommandir's workspace storage volume state flag is set
  set_fact:
    _vol_create: True
  when: pre_nvc | failed or pre_nvc.stderr | search("No volume with a name")

- name: Kommandir's workspace storage volume state flag is unset
  set_fact:
    _vol_create: False
  when: _vol_create is undefined

- name: Kommandir's workspace storage volume is created
  shell: "{{ workspace }}/openrc.sh /usr/bin/cinder create --name {{ kmndrname | quote }} 10"
  register: nvc
  when: _vol_create

- fail:
    msg: "Failed to create Kommandir's workspace storage volume"
  when: _vol_create and nvc | failed

- name: Wait for Kommandir's workspace storage volume availability
  shell: "{{ workspace }}/openrc.sh /usr/bin/cinder show {{ kmndrname | quote }}"
  register: nvs
  until: nvs.stdout | search("status.+available") or
         nvs.stdout | search("status.+in-use")
  retries: 90
  delay: 1

- name: Kommandir's workspace storage volume state is known
  shell: "{{ workspace }}/openrc.sh /usr/bin/cinder show {{ kmndrname | quote }}"
  register: post_nvc
  ignore_errors: True

- name: Kommandir's workspace storage volume ID line is parsed
  # This takes many many many more lines in ansible
  shell: echo {{ post_nvc.stdout | quote }} | grep ' id ' | cut -d '|' -f 3
  register: vid

- name: Kommandir's workspace storage volume ID line is parsed
  set_fact:
    _vol_id: '{{ vid.stdout | trim }}'

- fail:
    msg: "Failed to parse Kommandir's workspace storage volume UUID"
  # 37 characters total, 36 repetitions
  when: not _vol_id | search("^[0-9a-zA-Z-]{36}$")

- name: Kommandir's workspace storage volume attachment state flag is set
  set_fact:
    _vol_attach: True
  when: post_nvc | success and
        not post_nvc.stdout | search("attachments.*server_id")

- name: Kommandir's workspace storage volume attachment state flag is unset
  set_fact:
    _vol_attach: False
  when: _vol_attach is undefined

- name: Kommandir's workspace storage volume is attached
  # Hard-coded destination device, because detection is hard
  shell: "{{ workspace }}/openrc.sh /usr/bin/nova volume-attach {{ kmndrname | quote }} {{ _vol_id }} /dev/vdb"
  register: nva
  when: _vol_attach

- name: Wait for Kommandir's workspace storage volume attachment
  shell: "{{ workspace }}/openrc.sh /usr/bin/cinder show {{ _vol_id }}"
  register: nvs
  until: nvs.stdout | search("attachments.*server_id")
  retries: 30
  delay: 1

- fail:
    msg: "Failed to attach container storage volume to slave"
  when: not nvs.stdout | search("attachments.*server_id")
